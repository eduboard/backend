openapi: "3.0.0"
info:
  version: 0.1.0
  title: eduBoard Backend
paths:
  /api/v1/register:
    post:
      summary: Register a new user
      operationId: registerUser
      tags:
        - user
      parameters:
        - name: username
          in: body
          description: Username for the new User
          required: true
          schema:
            type: string
        - name: password
          in: body
          description: Password for the new User
          required: true
          schema:
            type: string
        - name: email
          in: body
          description: Email address for the new User
          required: true
          schema:
            type: string
      responses:
        '200':
          description: A user object
          headers:
            x-next:
              description: A link to the next page of responses
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/User"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /api/v1/courses/{id}:
    get:
      summary: Get a single course
      operationId: getCourse
      tags:
        - course
      responses:
        '200':
          description: Course
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Course"
        '403':
          description: Not Allowed
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /api/v1/courses:
    get:
      summary: List of all public courses
      operationId: getAllCourses
      tags:
        - course
      responses:
        '200':
          description: List of all public courses
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CourseList"
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
components:
  schemas:
    User:
      required:
        - id
        - username
      properties:
        id:
          type: string
        username:
          type: string
    Course:
      required:
        - id
        - name
      properties:
        id:
          type: string
        username:
          type: string
    CourseList:
      type: array
      items:
        $ref: "#/components/schemas/Course"
    UserList:
      type: array
      items:
        $ref: "#/components/schemas/User"
    Error:
      required:
        - code
        - message
      properties:
        code:
          type: integer
          format: int32
        message:
          type: string